VERSION v2.1
######################## RD53A Multiple Glass Assembly #############################
# Steps:
# 1. Prompt placement of HDI on Chuck 2
# 2. Turn on Chuck 2's vacuum
# 3. Move gantry head to Chuck 2 and survey 4 corners of HDI (defined by bond pads)
# 4. Compute would-be position and rotation of HDI on Chuck 1
# 5. Compute the positions of the centers for all four glass pieces
# 6. Prompt placement of the four SensorROC slides on the launchpad
#    i. Is Chuck 1 clear?
#    ii. Is the Pickup Tool ready?
# 7. Survey the four SensorROC's on the launchpad
# 8. Pick up the SensorROC's and place them on Chuck 1 at positions computed in Step 5
# 9. Prompt placement of vacuum tool on HDI on Chuck 2
# 10. Transfer vacuum from Chuck 2 to Vacuum Tool (Chuck 3)
# 11. Check that HDI was moved to Chuck 3 and the adhesive was applied
# 12. Prompt placement of Vacuum Tool bearing HDI on Chuck 1
# 13. Release vacuum of Vacuum Tool
# 14. Prompt replacement of Vacuum Tool on Chuck 3
# 15. Calculate the placement of the HDI and the senRoc
# 16. Move gantry head to Chuck 1 and survey for Module accuracy
# 17. End program with vacuums on or off

#Initialize the system
LOADCONFIG
HOME
SETVAC gantry_head_inner 0
SETVAC gantry_head_outer 0
SETVAC rd53a_chuck_1_TL 0
SETVAC rd53a_chuck_1_TR 0
SETVAC rd53a_chuck_1_BL 0
SETVAC rd53a_chuck_1_BR 0
SETVAC rd53a_chuck_2 0
SETVAC rd53a_chuck_3 0
SETVAC launchpad 0
SETLOG "LOG_Assembly_RD53A_SingleSensor_DataGeneration.txt"
SETERRORMODE prompt

# Rough positions of the HDI on Chuck 2
FLEXREAD $pos_chuck2_tr siteGeometry.pos_chuck2_tr
FLEXREAD $pos_chuck2_br siteGeometry.pos_chuck2_br
FLEXREAD $pos_chuck2_bl siteGeometry.pos_chuck2_bl
FLEXREAD $pos_chuck2_tl siteGeometry.pos_chuck2_tl

# Rough positions of the tr corner of the 4 SensorROCs on Launchpad
FLEXREAD $pos_TRsenRoc_launch_tr siteGeometry.pos_TRsenRoc_launch_tr
FLEXREAD $pos_BRsenRoc_launch_tr siteGeometry.pos_BRsenRoc_launch_tr
FLEXREAD $pos_BLsenRoc_launch_tr siteGeometry.pos_BLsenRoc_launch_tr
FLEXREAD $pos_TLsenRoc_launch_tr siteGeometry.pos_TLsenRoc_launch_tr

# Dimensions of the HDI and MockROC (bond pads or corners)
FLEXREAD $dim_HDI geometry.TFPX_RD53AHDI.fid_br
FLEXREAD $dim_senRoc geometry.TFPX_QUARTERGLASS.fid_br
MUL $dim_senRoc $dim_senRoc {2,2,0}
COPY $dim_HDI.z 0.241     # The change in z from senRoc -> HDI
FLEXREAD $correctForZ siteGeometry.correctForZ

# HDI pick and place translation vector and rotation angle measured independently
FLEXREAD $v_hdi_translation siteGeometry.v_hdi_translation
FLEXREAD $rot_hdi_translation siteGeometry.rot_hdi_translation

# SensorROC translation correctional terms measured independently
FLEXREAD $v_senRoc_error siteGeometry.v_senRoc_error
FLEXREAD $rot_senRoc_error siteGeometry.rot_senRoc_error

# SensorROC dimensions
COPY $len_senRoc $dim_senRoc.y #mm
COPY $wid_senRoc $dim_senRoc.x #mm
COPY $delta_len 0.1 #mm
COPY $delta_wid 0.1 #mm

#GOTO @STEP_EIGHT

# Step 1. Prompt placement of HDI on Chuck 2
PRINT "--------------------"
@STEP_ONE CHOICEPOPUP $choice "Have you placed the RD53A HDI on Chuck 2?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_ONE $choice

# Step 2. Turn on Chuck 2's vacuum

SETVAC rd53a_chuck_2 1

# Step 3. Move gantry head to Chuck 2 and survey 4 corners of HDI (defined by bond pads)

MOVESAFE $pos_chuck2_tr 100
@HDI_0 CHOICEPOPUP $choice "Ready to find the Top Right marker?" "Yes" "No"
GOTOIFN @HDI_0 $choice
CALL @SURVEYCORNERS $pos_chuck2_tr -> $pos_chuck2_tr

@HDI_1 CHOICEPOPUP $choice "Ready to find the Bottom Right marker?" "Yes" "No"
GOTOIFN @HDI_1 $choice
CALL @SURVEYCORNERS $pos_chuck2_br -> $pos_chuck2_br


@HDI_2 CHOICEPOPUP $choice "Ready to find the Bottom Left marker?" "Yes" "No"
GOTOIFN @HDI_2 $choice
CALL @SURVEYCORNERS $pos_chuck2_bl -> $pos_chuck2_bl

@HDI_3 CHOICEPOPUP $choice "Ready to find the Top Left marker?" "Yes" "No"
GOTOIFN @HDI_3 $choice
CALL @SURVEYCORNERS $pos_chuck2_tl -> $pos_chuck2_tl

# Step 4. Compute would-be position and rotation of the HDI on Chuck 1

FIT $pos_hdi_center $rot_hdi TFPX_RD53AHDI $pos_chuck2_tr $pos_chuck2_br $pos_chuck2_bl $pos_chuck2_tl

ADD $pos_hdi_center $pos_hdi_center $v_hdi_translation

QUAT2EULER $rot_hdi $trash0 $trash1 $rot_hdi
ADD $rot_hdi $rot_hdi $rot_hdi_translation

ADD $pos_hdi_center_withError $pos_hdi_center $v_senRoc_error
ADD $rot_hdi_withError $rot_hdi $rot_senRoc_error

PRINT "HDI"
PRINT "Rot: %f Center: %v" $rot_hdi $pos_hdi_center
PRINT ""

CHOICEPOPUP $choice "Are angles and positions reasonable (See console)?" "Yes, continue" "No"
GOTOIF @ANGLE_CHECK $choice
END
@ANGLE_CHECK

MOVESAFE {350,150,0} 100

# Step 5. Compute the positions of the centers for all four glass pieces

COS $cos_rot_hdi $rot_hdi_withError
SIN $sin_rot_hdi $rot_hdi_withError

MUL $half_len_senRoc $len_senRoc 0.5
MUL $half_wid_senRoc $wid_senRoc 0.5
ADD $half_len_senRoc $half_len_senRoc $delta_len
ADD $half_wid_senRoc $half_wid_senRoc $delta_wid

MUL $half_len_cos $half_len_senRoc $cos_rot_hdi
MUL $half_wid_sin $half_wid_senRoc $sin_rot_hdi
MUL $half_len_sin $half_len_senRoc $sin_rot_hdi
MUL $half_wid_cos $half_wid_senRoc $cos_rot_hdi

#TR
ADD $delta_x $half_len_sin $half_wid_cos
SUB $delta_y $half_wid_sin $half_len_cos
ADD $pos_TRsenRoc_center $pos_hdi_center_withError.x $delta_x
ADD $pos_TRsenRoc_center.y $pos_hdi_center_withError.y $delta_y

#BR
SUB $delta_x $half_wid_cos $half_len_sin
ADD $delta_y $half_len_cos $half_wid_sin
ADD $pos_BRsenRoc_center $pos_hdi_center_withError.x $delta_x
ADD $pos_BRsenRoc_center.y $pos_hdi_center_withError.y $delta_y

#BL
ADD $delta_x $half_len_sin $half_wid_cos
SUB $delta_y $half_len_cos $half_wid_sin
SUB $pos_BLsenRoc_center $pos_hdi_center_withError.x $delta_x
ADD $pos_BLsenRoc_center.y $pos_hdi_center_withError.y $delta_y

#TL
SUB $delta_x $half_len_sin $half_wid_cos
ADD $delta_y $half_len_cos $half_wid_sin
ADD $pos_TLsenRoc_center $pos_hdi_center_withError.x $delta_x
SUB $pos_TLsenRoc_center.y $pos_hdi_center_withError.y $delta_y

#Copying the z-components
COPY $pos_TLsenRoc_center.z $pos_hdi_center_withError.z
COPY $pos_BRsenRoc_center.z $pos_hdi_center_withError.z
COPY $pos_BLsenRoc_center.z $pos_hdi_center_withError.z
COPY $pos_TRsenRoc_center.z $pos_hdi_center_withError.z

# Step 6. Prompt placement of SensorROC

@STEP_SIX CHOICEPOPUP $choice "Have you placed the SensorROC on the Launchpad?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_SIX $choice
SETVAC launchpad 1
@STEP_SIX_i CHOICEPOPUP $choice "Is Chuck 1 clear?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_SIX_i $choice
@STEP_SIX_ii CHOICEPOPUP $choice "Is the Pickup Tool ready?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_SIX_ii $choice

# Step 7. Survey the SensorROC

  #TR Sensor
CALL @FINDSENSORCENTERS $pos_TRsenRoc_launch_tr $len_senRoc $wid_senRoc -> $pos_TRsenRoc_launch $rot_TRsenRoc_launch

  #BR Sensor
CALL @FINDSENSORCENTERS $pos_BRsenRoc_launch_tr $len_senRoc $wid_senRoc -> $pos_BRsenRoc_launch $rot_BRsenRoc_launch

  #BL Sensor
CALL @FINDSENSORCENTERS $pos_BLsenRoc_launch_tr $len_senRoc $wid_senRoc -> $pos_BLsenRoc_launch $rot_BLsenRoc_launch

  #TL Sensor
CALL @FINDSENSORCENTERS $pos_TLsenRoc_launch_tr $len_senRoc $wid_senRoc -> $pos_TLsenRoc_launch $rot_TLsenRoc_launch

# Step 8. Pick up the SensorROCs and place them on Chuck 1 at positions computed in Step 5
@STEP_EIGHT PASS
LOADTOOL picker_tool
MOVENAME stagingArea

##################
# Pickup Step TR #
CALL @CALCPICKUP_4SENSORS $pos_TRsenRoc_launch $rot_TRsenRoc_launch -> $pos $pos_z0
CALL @PICKUPSTEP $pos $pos_z0 $rot_TRsenRoc_launch

# Place Step TR
CALL @CALCPICKUP_4SENSORS $pos_TRsenRoc_center $rot_hdi_withError -> $pos $pos_z0
COPY $vac @TURNON_chuck1_TR
CALL @PLACESTEP $pos $pos_z0 $rot_hdi_withError $vac

##################
# Pickup Step BR #
CALL @CALCPICKUP_4SENSORS $pos_BRsenRoc_launch $rot_BRsenRoc_launch -> $pos $pos_z0
CALL @PICKUPSTEP $pos $pos_z0 $rot_BRsenRoc_launch

# Place Step BR
CALL @CALCPICKUP_4SENSORS $pos_BRsenRoc_center $rot_hdi_withError -> $pos $pos_z0
COPY $vac @TURNON_chuck1_BR
CALL @PLACESTEP $pos $pos_z0 $rot_hdi_withError $vac

##################
# Pickup Step BL #
CALL @CALCPICKUP_4SENSORS $pos_BLsenRoc_launch $rot_BLsenRoc_launch -> $pos $pos_z0
CALL @PICKUPSTEP $pos $pos_z0 $rot_BLsenRoc_launch

# Place Step BL
CALL @CALCPICKUP_4SENSORS $pos_BLsenRoc_center $rot_hdi_withError -> $pos $pos_z0
COPY $vac @TURNON_chuck1_BL
CALL @PLACESTEP $pos $pos_z0 $rot_hdi_withError $vac

##################
# Pickup Step TL #
CALL @CALCPICKUP_4SENSORS $pos_TLsenRoc_launch $rot_TLsenRoc_launch -> $pos $pos_z0
CALL @PICKUPSTEP $pos $pos_z0 $rot_TLsenRoc_launch

# Place Step TL
CALL @CALCPICKUP_4SENSORS $pos_TLsenRoc_center $rot_hdi_withError -> $pos $pos_z0
COPY $vac @TURNON_chuck1_TL
CALL @PLACESTEP $pos $pos_z0 $rot_hdi_withError $vac

ROTATETO 0 10
UNLOADTOOL

MOVESAFE {350,150,0} 100

# Step 9. Prompt placement of vacuum tool on HDI on Chuck 2
@STEP_NINE CHOICEPOPUP $choice "Have you placed the Vacuum Tool on the HDI in Chuck 2 such that the fiducials are visible through its viewing holes?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_NINE $choice

# Step 10. Transfer vacuum from Chuck 2 to Vacuum Tool (Chuck 3)

SETVAC rd53a_chuck_3 1
WAIT 1000
SETVAC rd53a_chuck_2 0

# Step 11. Check that HDI was moved to Chuck 3 and the adhesive was applied
@STEP_ELEVEN CHOICEPOPUP $choice "Did you move the HDI to Chuck 3 and apply the adhesive?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_ELEVEN $choice

# Step 12. Prompt placement of Vacuum Tool bearing HDI on Chuck 1
@STEP_TWELVE CHOICEPOPUP $choice "Did you place the HDI on the SensorROC on Chuck 1 (With adhesive between them)?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_TWELVE $choice

# Step 13. Release vacuum of Vacuum Tool

SETVAC rd53a_chuck_3 0

# Step 14. Prompt replacement of Vacuum Tool on Chuck 3
@STEP_FOURTEEN CHOICEPOPUP $choice "Did you place the Vacuum Tool on Chuck 3?" "Yes, continue" "No, ask me again"
GOTOIFN @STEP_FOURTEEN $choice

# Step 15. Calculate the placement of the HDI and the senRoc

CALL @CALCCORNERS $pos_hdi_center_withError $rot_hdi_withError $dim_senRoc -> $pos_senRoc1_tr $pos_senRoc1_br $pos_senRoc1_bl $pos_senRoc1_tl
SUB $pos_hdi_center_withError.z $pos_hdi_center_withError.z $dim_HDI.z
CALL @CALCCORNERS $pos_hdi_center_withError $rot_hdi_withError $dim_HDI -> $pos_chuck1_tr $pos_chuck1_br $pos_chuck1_bl $pos_chuck1_tl
ADD $pos_senRoc1_tr.z $pos_senRoc1_tr.z $correctForZ
ADD $pos_senRoc1_br.z $pos_senRoc1_br.z $correctForZ
ADD $pos_senRoc1_bl.z $pos_senRoc1_bl.z $correctForZ
ADD $pos_senRoc1_tl.z $pos_senRoc1_tl.z $correctForZ
ADD $pos_chuck1_tr.z $pos_chuck1_tr.z $correctForZ
ADD $pos_chuck1_br.z $pos_chuck1_br.z $correctForZ
ADD $pos_chuck1_bl.z $pos_chuck1_bl.z $correctForZ
ADD $pos_chuck1_tl.z $pos_chuck1_tl.z $correctForZ

# Step 16. Move gantry head to Chuck 1 and survey for Module accuracy

MOVESAFE $pos_chuck1_tr 100
@ACC_0 CHOICEPOPUP $choice "Ready to find the Top Right marker of HDI?" "Yes" "No"
GOTOIFN @ACC_0 $choice
CALL @SURVEYCORNERS $pos_chuck1_tr -> $pos_chuck1_tr
COPY $pos_chuck1_br.z $pos_chuck1_tr.z

@ACC_1 CHOICEPOPUP $choice "Ready to find the Top Right marker of SensorROC?" "Yes" "No"
GOTOIFN @ACC_1 $choice
CALL @SURVEYCORNERS $pos_senRoc1_tr -> $pos_senRoc1_tr
COPY $pos_senRoc1_br.z $pos_senRoc1_tr.z


@ACC_2 CHOICEPOPUP $choice "Ready to find the Bottom Right marker of HDI?" "Yes" "No"
GOTOIFN @ACC_2 $choice
CALL @SURVEYCORNERS $pos_chuck1_br -> $pos_chuck1_br
COPY $pos_chuck1_bl.z $pos_chuck1_br.z

@ACC_3 CHOICEPOPUP $choice "Ready to find the Bottom Right marker of SensorROC?" "Yes" "No"
GOTOIFN @ACC_3 $choice
CALL @SURVEYCORNERS $pos_senRoc1_br -> $pos_senRoc1_br
COPY $pos_senRoc1_bl.z $pos_senRoc1_br.z


@ACC_4 CHOICEPOPUP $choice "Ready to find the Bottom Left marker of HDI?" "Yes" "No"
GOTOIFN @ACC_4 $choice
CALL @SURVEYCORNERS $pos_chuck1_bl -> $pos_chuck1_bl
COPY $pos_chuck1_tl.z $pos_chuck1_bl.z


@ACC_5 CHOICEPOPUP $choice "Ready to find the Bottom Left marker of SensorROC?" "Yes" "No"
GOTOIFN @ACC_5 $choice
CALL @SURVEYCORNERS $pos_senRoc1_bl -> $pos_senRoc1_bl
COPY $pos_senRoc1_tl.z $pos_senRoc1_bl.z


@ACC_6 CHOICEPOPUP $choice "Ready to find the Top Left marker of HDI?" "Yes" "No"
GOTOIFN @ACC_6 $choice
CALL @SURVEYCORNERS $pos_chuck1_tl -> $pos_chuck1_tl

@ACC_7 CHOICEPOPUP $choice "Ready to find the Top Left marker of SensorROC?" "Yes" "No"
GOTOIFN @ACC_7 $choice
CALL @SURVEYCORNERS $pos_senRoc1_tl -> $pos_senRoc1_tl

  #Calculating delta(delta(x)) and avg(Delta(y))
ADD $pos_HDI_upperPad $pos_chuck1_tr $pos_chuck1_tl
MUL $pos_HDI_upperPad $pos_HDI_upperPad {0.5,0.5,0.5}
ADD $pos_HDI_lowerPad $pos_chuck1_br $pos_chuck1_bl
MUL $pos_HDI_lowerPad $pos_HDI_lowerPad {0.5,0.5,0.5}

ADD $pos_senROC_upperPad $pos_senRoc1_tr $pos_senRoc1_tl
MUL $pos_senROC_upperPad $pos_senROC_upperPad {0.5,0.5,0.5}
ADD $pos_senROC_lowerPad $pos_senRoc1_br $pos_senRoc1_bl
MUL $pos_senROC_lowerPad $pos_senROC_lowerPad {0.5,0.5,0.5}

CALL @SURVEYCALC $pos_HDI_upperPad $pos_HDI_lowerPad $pos_senROC_upperPad -> $delta_upper_x $delta_upper_y
CALL @SURVEYCALC $pos_HDI_lowerPad $pos_HDI_upperPad $pos_senROC_lowerPad -> $delta_lower_x $delta_lower_y
SUB $deltaDeltaX $delta_upper_x $delta_lower_x
ADD $avgDeltaY $delta_upper_y $delta_lower_y
MUL $avgDeltaY $avgDeltaY 0.5

PRINT "Delta(delta(X)): %f" $deltaDeltaX
PRINT "Avg(delta(Y)): %f" $avgDeltaY

# Step 17. End program with vacuums on or off
CHOICEPOPUP $choice "Do you want to leave the vacuums on?" "Yes, Leave them on" "No, Turn them off"
GOTOIF @STEP_SIXTEEN $choice

SETVAC gantry_head_inner 0
SETVAC gantry_head_outer 0
SETVAC rd53a_chuck_1_TL 0
SETVAC rd53a_chuck_1_TR 0
SETVAC rd53a_chuck_1_BL 0
SETVAC rd53a_chuck_1_BR 0
SETVAC rd53a_chuck_2 0
SETVAC rd53a_chuck_3 0
SETVAC launchpad 0

@STEP_SIXTEEN PASS

HOME

END

#FINDSENSORCENTERS
# Arguments:
#  $tr - approximate position of the top right corner
#  $len - length of what is being surveyed
#  $wid - wid of what is being surveyed
#
# Returns:
#  $position - calculated position of the center based on the corners
#  $rotation - calculated rotation based on the corners
@FINDSENSORCENTERS(tr,len,wid)
  MOVESAFE $tr 50
  @ROC_0 CHOICEPOPUP $choice "Ready to find the Top Right marker?" "Yes" "No"
  GOTOIFN @ROC_0 $choice
  CALL @SURVEYCORNERS $tr -> $tr

  COPY $br $tr
  ADD $br.y $tr.y $len
  @ROC_1 CHOICEPOPUP $choice "Ready to find the Bottom Right marker?" "Yes" "No"
  GOTOIFN @ROC_1 $choice
  CALL @SURVEYCORNERS $br -> $br

  COPY $bl $br
  SUB $bl.x $bl.x $wid
  @ROC_2 CHOICEPOPUP $choice "Ready to find the Bottom Left marker?" "Yes" "No"
  GOTOIFN @ROC_2 $choice
  CALL @SURVEYCORNERS $bl -> $bl

  COPY $tl $tr
  SUB $tl.x $tl.x $wid
  @ROC_3 CHOICEPOPUP $choice "Ready to find the Top Left marker?" "Yes" "No"
  GOTOIFN @ROC_3 $choice
  CALL @SURVEYCORNERS $tl -> $tl

  # Calculate the orientation of the SensorROC
  FIT $position $rotation TFPX_QUARTERGLASS $tr $br $bl $tl

  QUAT2EULER $rotation $trash0 $trash1 $rotation

  PRINT "Sen Roc"
  PRINT "Rot: %f Center: %v" $rotation $position
  PRINT ""

  CHOICEPOPUP $choice "Are angles and positions reasonable (See console)?" "Yes, continue" "No"
  GOTOIF @ANGLE_CHECK_2 $choice
  END
  @ANGLE_CHECK_2
  RETURN $position $rotation


# SURVEYCORNERS
# Arguments:
# $x_corner - Approximate position of an object that you would like to know the precise position. Returns with precise position written in this location
#
# Returns:
# $x_corner - Updated position of the corner that is being looked for
@SURVEYCORNERS(x_corner)
  MOVESAFE $x_corner 50
  @SURCORNPOP VIDEO
  CHOICEPOPUP $choice "Did you correctly align the cursor with the marker?" "Yes" "No"
  GOTOIFN @SURCORNPOP $choice
  GETPOS $x_corner
  RETURN $x_corner

# CALCPICKUP_4SENSORS
# Arguments:
#  $target_pos - center of piece to pickup/place
#  $target_rot - rotation of piece to pickup/place
#
# Returns:
#  $pickup_pos - pickup position
#  $pickup_pos_z0 - pickup position with z = 0
@CALCPICKUP_4SENSORS(target_pos,target_rot)
  FLEXREAD $picker_height geometry.PICKER_TOOL.center_offset
  FLEXREAD $ghco geometry.tool_holder_offset
  FLEXREAD $center2topSuction geometry.PICKER_TOOL.center_to_suction
  ADD $netoffset $picker_height $ghco
  SUB $pickup_pos $target_pos $netoffset
  # X & Y Correction
  SIN $sin_theta $target_rot
  COS $cos_theta $target_rot
  MUL $x_correction $center2topSuction.y $sin_theta
  MUL $y_correction $center2topSuction.y $cos_theta
  SUB $pickup_pos.x $pickup_pos.x $x_correction
  ADD $pickup_pos.y $pickup_pos.y $y_correction
  COPY $pickup_pos_z0 $pickup_pos
  COPY $pickup_pos_z0.z 0
  RETURN $pickup_pos $pickup_pos_z0

# PICKUPSTEP
# takes place directly after CALCPICKUP_4SENSORS
# Arguments:
#  $pick_pos - pickup position
#  $pick_pos_z0 - pickup position with z = 0
#  $pick_rot - rotation of the what is being picked up
#
# No Returns
@PICKUPSTEP(pick_pos,pick_pos_z0,pick_rot)
  MOVETO $pick_pos_z0 100
  ROTATETO $pick_rot 10
  SUB $pick_pos.z $pick_pos.z 5
  MOVETO $pick_pos 10
  ADD $pick_pos.z $pick_pos.z 5
  MOVETO $pick_pos 1
  WAIT 500
  SETVAC gantry_head_inner 1
  WAIT 2000
  SETVAC launchpad 0
  WAIT 1000
  SUB $pick_pos.z $pick_pos.z 5
  MOVETO $pick_pos 1
  MOVETO $pick_pos_z0 10
  RETURN

# PLACESTEP
# takes place directly after CALCPICKUP_4SENSORS
# Arguments:
#  $place_pos - pickup position
#  $place_pos_z0 - pickup position with z = 0
#  $place_rot - rotation of the what is being picked up
#  $vacIndex - current vacuum that needs to be turned on (passed as number)
#
# No Returns
@PLACESTEP(place_pos,place_pos_z0,place_rot,vacIndex)
  MOVETO $place_pos_z0 50
  ROTATETO $place_rot 10
  SUB $place_pos.z $place_pos.z 5
  MOVETO $place_pos 10
  ADD $place_pos.z $place_pos.z 5
  MOVETO $place_pos 1
  WAIT 500
  GOTO $vacIndex
  @TURNON_chuck1_TR SETVAC rd53a_chuck_1_TR 1
  GOTO @VACWAIT
  @TURNON_chuck1_BR SETVAC rd53a_chuck_1_BR 1
  GOTO @VACWAIT
  @TURNON_chuck1_BL SETVAC rd53a_chuck_1_BL 1
  GOTO @VACWAIT
  @TURNON_chuck1_TL SETVAC rd53a_chuck_1_TL 1
  @VACWAIT
  WAIT 1000
  SETVAC gantry_head_inner 0
  WAIT 2000
  MOVETO $place_pos_z0 10
  RETURN

# CALCCORNERS
# Arguments:
#  $center - center of object
#  $rotation - rotation of the object
#  $dimensions - dimensions of object (as a vector)
#
# Returns
#  $topRight - position of the top right corner
#  $botRight - position of the bottom right corner
#  $botLeft - position of the bottom left corner
#  $topLeft - position of the top left corner
@CALCCORNERS(center,rotation,dimensions)
  SIN $sin_angle $rotation
  COS $cos_angle $rotation
  COPY $width $dimensions.x
  COPY $length $dimensions.y
  MUL $w_cos $width $cos_angle
  MUL $w_sin $width $sin_angle
  MUL $l_cos $length $cos_angle
  MUL $l_sin $length $sin_angle

  ADD $d_x_TR $l_sin $w_cos
  ADD $topRight $center.x $d_x_TR
  SUB $d_y_TR $w_sin $l_cos
  ADD $topRight.y $center.y $d_y_TR
  COPY $topRight.z $center.z

  SUB $d_x_BR $w_cos $l_sin
  ADD $botRight $center.x $d_x_BR
  ADD $d_y_BR $w_sin $l_cos
  ADD $botRight.y $center.y $d_y_BR
  COPY $botRight.z $center.z

  ADD $d_x_BL $w_cos $l_sin
  SUB $botLeft $center.x $d_x_BL
  SUB $d_y_BL $l_cos $w_sin
  ADD $botLeft.y $center.y $d_y_BL
  COPY $botLeft.z $center.z

  SUB $d_x_TL $l_sin $w_cos
  ADD $topLeft $center.x $d_x_TL
  ADD $d_y_TL $l_cos $w_sin
  SUB $topLeft.y $center.y $d_y_TL
  COPY $topLeft.z $center.z

  RETURN $topRight $botRight $botLeft $topLeft

# SURVEYCALC
# Arguments:
#  $near_hdi - Center position for the nearest HDI bond pad
#  $far_hdi - Center position for the furthest HDI bond pad
#  $not_hdi - Center position for the current glass/sensor bond pad
#
# Returns:
#  $delta_x
#  $delta_y
@SURVEYCALC(near_hdi,far_hdi,not_hdi)
  #Variables
  COPY $a $near_hdi.x
  COPY $b $near_hdi.y
  COPY $c $far_hdi.x
  COPY $d $far_hdi.y
  COPY $e $not_hdi.x
  COPY $f $not_hdi.y

  #Slope
  SUB $b_min_d $b $d
  SUB $a_min_c $a $c
  INVERT $a_min_c $a_min_c
  MUL $slope $b_min_d $a_min_c

  #Calulating numerator for x
  MUL $slope_2 $slope $slope
  MUL $top_one $a $slope_2
  SUB $f_min_b $f $b
  MUL $top_two $f_min_b $slope
  ADD $top_oneTwo $top_one $top_two
  ADD $top $top_oneTwo $e

  #Calculating denomenator for x
  ADD $bottom $slope_2 1
  INVERT $bottom $bottom

  #Calculating x and y
  MUL $x $top $bottom
  INVERT $inv_slope $slope
  MUL $inv_slope $inv_slope -1
  SUB $x_min_e $x $e
  MUL $y_one $inv_slope $x_min_e
  ADD $y $y_one $f

  #Calculating deltas
  SUB $a_min_x $a $x
  SUB $b_min_y $b $y
  SUB $e_min_x $e $x
  SUB $f_min_y $f $y

  POW $a_min_x_2 $a_min_x 2
  POW $b_min_y_2 $b_min_y 2
  ADD $delta_y_2 $a_min_x_2 $b_min_y_2
  POW $delta_y $delta_y_2 0.5

  POW $e_min_x_2 $e_min_x 2
  POW $f_min_y_2 $f_min_y 2
  ADD $delta_x_2 $e_min_x_2 $f_min_y_2
  POW $delta_x $delta_x_2 0.5
  RETURN $delta_x $delta_y
